#配置缓存
spring.cache.type=redis
#缓存生存时间一小时,单位ms
spring.cache.redis.time-to-live=3600000
#是否缓存空值
spring.cache.redis.cache-null-values=false

#云端连接
spring.datasource.url=jdbc:mysql://127.0.0.1:9527/chat?characterEncoding=UTF-8&autoReconnect=true&useTimezone=true&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.username=root
#密码
spring.datasource.password=xxxxxxxx

#druid连接池配置
#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=10
#最大连接池数量
spring.datasource.druid.max-active=500
#最小连接池数量
spring.datasource.druid.min-idle=10
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
spring.datasource.druid.max-wait=60000
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=0
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.validation-query=SELECT 1 
spring.datasource.druid.validation-query-timeout=60000

#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-return=false
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#有两个含义： 1.Destroy线程会检测连接的间隔时间  2.testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.druid.time-between-eviction-runs-millis=60000
#Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于minEvictableIdleTimeMillis，则关闭当前连接。
spring.datasource.druid.min-evictable-idle-time-millis=300000
#设置是否保持连接活动,打开后，增强timeBetweenEvictionRunsMillis的周期性连接检查，minIdle内的空闲连接，每次检查强制验证连接有效性
spring.datasource.druid.keep-alive=true

#配置removeAbandoned对性能会有一些影响，建议怀疑存在泄漏之后再打开。
#连接泄露检查，打开removeAbandoned功能 , 连接从连接池借出后，长时间不归还，将触发强制回连接。
#回收周期随timeBetweenEvictionRunsMillis进行，如果连接为从连接池借出状态，并且未执行任何sql，
#并且从借出时间起已超过removeAbandonedTimeout时间，则强制归还连接到连接池中
#spring.datasource.druid.remove-abandoned=true

#超时时间，秒 
#spring.datasource.druid.remove-abandoned-timeout-millis=300

#--------------------------------------------监控配置------------------------------------
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled= true
spring.datasource.druid.stat-view-servlet.url-pattern= /druid/*
spring.datasource.druid.stat-view-servlet.reset-enable= false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin9527+*
# 设置白名单
spring.datasource.druid.stat-view-servlet.allow= 127.0.0.1

#这个表示每隔多长时间将监控记录输出到日志文件中，当 timeBetweenLogStatsMillis > 0 时，Druid会自动进行监控记录的日志输出。
spring.datasource.druid.time-between-log-stats-millis=600000
###监控配置 end###

# 配置StatFilter
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=5000


# 配置WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.delete-allow=true
spring.datasource.druid.filter.wall.config.drop-table-allow=false
#允许批量导入
spring.datasource.druid.filter.wall.config.none-base-statement-allow=true
spring.datasource.druid.filter.wall.config.multi-statement-allow=true
#开启log4j2
#spring.datasource.druid.filter.log4j2.enabled=true

#配置ConfigFilter
spring.datasource.druid.filter.config.enabled=true


#---------------------------------Redis配置----------------------------------
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码
spring.redis.password=crow
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000

#---------------------------------自定义属性----------------------------------
#允许跨域访问域名
custom.allow-origin=https://xxxxxxxxx